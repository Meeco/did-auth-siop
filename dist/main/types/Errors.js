"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SIOPErrors;
(function (SIOPErrors) {
    SIOPErrors["AUTH_REQUEST_EXPECTS_VP"] = "authentication request expects a verifiable presentation in the response";
    SIOPErrors["AUTH_REQUEST_DOESNT_EXPECT_VP"] = "authentication request doesn't expect a verifiable presentation in the response";
    SIOPErrors["BAD_INTERNAL_VERIFICATION_PARAMS"] = "Error: One of the either didUrlResolver or both registry and rpcUrl must be set";
    SIOPErrors["BAD_NONCE"] = "The nonce in the payload does not match the supplied nonce";
    SIOPErrors["BAD_PARAMS"] = "Wrong parameters provided.";
    SIOPErrors["BAD_SIGNATURE_PARAMS"] = "Signature parameters should be internal signature with hexPrivateKey, did, and an optional kid, or external signature parameters with signatureUri, did, and optionals parameters authZToken, hexPublicKey, and kid";
    SIOPErrors["CANT_UNMARSHAL_JWT_VP"] = "can't unmarshal the presentation object";
    SIOPErrors["NO_PRESENTATION_SUBMISSION"] = "The VP did not contain a presentation submission. Did you forget to call PresentationExchange.checkSubmissionFrom?";
    SIOPErrors["CREDENTIAL_FORMATS_NOT_SUPPORTED"] = "CREDENTIAL_FORMATS_NOT_SUPPORTED";
    SIOPErrors["COULD_NOT_FIND_VCS_MATCHING_PD"] = "Could not find VerifiableCredentials matching presentationDefinition object in the provided VC list";
    SIOPErrors["DIDAUTH_REQUEST_PAYLOAD_NOT_CREATED"] = "DidAuthRequestPayload not created";
    SIOPErrors["DID_METHODS_NOT_SUPORTED"] = "DID_METHODS_NOT_SUPPORTED";
    SIOPErrors["EVALUATE_PRSENTATION_EXCHANGE_FAILED"] = "Evaluation of presentation definition from the request against the Verifiable Presentation failed.";
    SIOPErrors["ERROR_ON_POST_CALL"] = "Error on Post call: ";
    SIOPErrors["ERROR_RETRIEVING_DID_DOCUMENT"] = "Error retrieving did document";
    SIOPErrors["ERROR_RETRIEVING_VERIFICATION_METHOD"] = "Error retrieving verificaton method from did document";
    SIOPErrors["ERROR_VALIDATING_NONCE"] = "Error validating nonce.";
    SIOPErrors["ERROR_VERIFYING_SIGNATURE"] = "Error verifying the DID Auth Token signature.";
    SIOPErrors["EXPIRED"] = "The token has expired";
    SIOPErrors["INVALID_AUDIENCE"] = "Audience is invalid. Should be a string value.";
    SIOPErrors["ISS_DID_NOT_JWKS_URI_DID"] = " DID in the jwks_uri does NOT match the DID in the iss claim";
    SIOPErrors["JWK_THUMBPRINT_MISMATCH_SUB"] = "JWK computed thumbprint does not match thumbprint included in Response Token sub claim";
    SIOPErrors["MALFORMED_SIGNATURE_RESPONSE"] = "Response format is malformed";
    SIOPErrors["NO_ALG_SUPPORTED"] = "Algorithm not supported.";
    SIOPErrors["NO_ALG_SUPPORTED_YET"] = "Algorithm is not supported yet. Only ES256 supported for this version.";
    SIOPErrors["NO_AUDIENCE"] = "No audience found in JWT payload";
    SIOPErrors["NO_DID_PAYLOAD"] = "payload must contain did field in payload for self-issued tokens";
    SIOPErrors["NO_IDENTIFIERS_URI"] = "identifiersUri must be defined to get the publick key";
    SIOPErrors["NO_ISS_DID"] = "Token does not have a iss DID";
    SIOPErrors["NO_JWT"] = "no JWT was supplied";
    SIOPErrors["NO_KEY_CURVE_SUPPORTED"] = "Key Curve not supported.";
    SIOPErrors["NO_NONCE"] = "No nonce found in JWT payload";
    SIOPErrors["NO_REFERENCE_URI"] = "referenceUri must be defined when REFERENCE option is used";
    SIOPErrors["NO_SELFISSUED_ISS"] = "The Response Token Issuer Claim (iss) MUST be https://self-isued.me";
    SIOPErrors["NO_SUB_TYPE"] = "No or empty sub_type found in JWT payload";
    SIOPErrors["REGISTRATION_NOT_SET"] = "Registration metadata not set.";
    SIOPErrors["REQUEST_CLAIMS_PRESENTATION_DEFINITION_NOT_VALID"] = "Presentation definition in the request claims is not valid";
    SIOPErrors["REQUEST_OBJECT_TYPE_NOT_SET"] = "Request object type is not set.";
    SIOPErrors["RESPONSE_AUD_MISMATCH_REDIRECT_URI"] = "The audience (aud) in Response Token does NOT match the redirect_uri value sent in the Authentication Request";
    SIOPErrors["RESPONSE_OPTS_MUST_CONTAIN_VERIFIABLE_CREDENTIALS_AND_HOLDER_DID"] = "Since the request has a presentation definition, response must contain verifiable credentials and holder's did";
    SIOPErrors["RESPONSE_OPTS_PRESENTATIONS_SUBMISSION_IS_NOT_VALID"] = "presentation_submission object inside the response opts vp should be valid";
    SIOPErrors["RESPONSE_STATUS_UNEXPECTED"] = "Received unexpected respons status";
    SIOPErrors["REGISTRATION_OBJECT_TYPE_NOT_SET"] = "Registration object type is not set.";
    SIOPErrors["SIGNATURE_OBJECT_TYPE_NOT_SET"] = "Signature object type is not set.";
    SIOPErrors["SUB_JWK_NOT_FOUND_OR_NOT_KID"] = "Response Token does not contains sub_jwk claim or sub_jwk does not contain kid attribute.";
    SIOPErrors["VERIFIABLE_PRESENTATION_FORMAT_NOT_SUPPORTED"] = "This type of verifiable presentation isn't supported in this version";
    SIOPErrors["VERIFICATION_METHOD_NOT_SUPPORTED"] = "Verification method not supported";
    SIOPErrors["VERIFICATION_METHOD_NO_MATCH"] = "The verification method from the RP's DID Document does NOT match the kid of the SIOP Request";
    SIOPErrors["VERIFY_BAD_PARAMS"] = "Verify bad parameters";
})(SIOPErrors || (SIOPErrors = {}));
exports.default = SIOPErrors;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21haW4vdHlwZXMvRXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSyxVQWtESjtBQWxERCxXQUFLLFVBQVU7SUFDYixrSEFBb0csQ0FBQTtJQUNwRywrSEFBaUgsQ0FBQTtJQUNqSCxrSUFBb0gsQ0FBQTtJQUNwSCxzRkFBd0UsQ0FBQTtJQUN4RSx1REFBeUMsQ0FBQTtJQUN6QywwUEFBNE8sQ0FBQTtJQUM1TywrRUFBaUUsQ0FBQTtJQUNqRSwrSkFBaUosQ0FBQTtJQUNqSixtRkFBcUUsQ0FBQTtJQUNyRSxvSkFBc0ksQ0FBQTtJQUN0SSx1RkFBeUUsQ0FBQTtJQUN6RSxvRUFBc0QsQ0FBQTtJQUN0RCx5SkFBMkksQ0FBQTtJQUMzSSx5REFBMkMsQ0FBQTtJQUMzQyw2RUFBK0QsQ0FBQTtJQUMvRCw0R0FBOEYsQ0FBQTtJQUM5RixnRUFBa0QsQ0FBQTtJQUNsRCx5RkFBMkUsQ0FBQTtJQUMzRSwrQ0FBaUMsQ0FBQTtJQUNqQyxpRkFBbUUsQ0FBQTtJQUNuRSx1R0FBeUYsQ0FBQTtJQUN6RixvSUFBc0gsQ0FBQTtJQUN0SCwyRUFBNkQsQ0FBQTtJQUM3RCwyREFBNkMsQ0FBQTtJQUM3Qyw2R0FBK0YsQ0FBQTtJQUMvRiw4REFBZ0QsQ0FBQTtJQUNoRCxpR0FBbUYsQ0FBQTtJQUNuRiwwRkFBNEUsQ0FBQTtJQUM1RSwwREFBNEMsQ0FBQTtJQUM1Qyw0Q0FBOEIsQ0FBQTtJQUM5QixpRUFBbUQsQ0FBQTtJQUNuRCx3REFBMEMsQ0FBQTtJQUMxQyw2RkFBK0UsQ0FBQTtJQUMvRSx1R0FBeUYsQ0FBQTtJQUN6Rix1RUFBeUQsQ0FBQTtJQUN6RCxxRUFBdUQsQ0FBQTtJQUN2RCw2SEFBK0csQ0FBQTtJQUMvRyw2RUFBK0QsQ0FBQTtJQUMvRCxrS0FBb0osQ0FBQTtJQUNwSixpTUFBbUwsQ0FBQTtJQUNuTCxnSkFBa0ksQ0FBQTtJQUNsSSwrRUFBaUUsQ0FBQTtJQUNqRSx1RkFBeUUsQ0FBQTtJQUN6RSxpRkFBbUUsQ0FBQTtJQUNuRSx3SUFBMEgsQ0FBQTtJQUMxSCxtSUFBcUgsQ0FBQTtJQUNySCxxRkFBdUUsQ0FBQTtJQUN2RSw0SUFBOEgsQ0FBQTtJQUM5SCx5REFBMkMsQ0FBQTtBQUM3QyxDQUFDLEVBbERJLFVBQVUsS0FBVixVQUFVLFFBa0RkO0FBRUQsa0JBQWUsVUFBVSxDQUFDIn0=